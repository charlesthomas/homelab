## Default values.yaml for Telegraf
## This is a YAML-formatted file.
## ref: https://hub.docker.com/r/library/telegraf/tags/

image:
  repo: "telegraf"
  tag: "1.28-alpine"
  pullPolicy: IfNotPresent

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources:
  requests:
    memory: 256Mi
    cpu: 0.1
  limits:
    memory: 2Gi
    cpu: 1

## Configure args passed to Telegraf containers
args: []

env:
  # This pulls HOSTNAME from the node, not the pod.
  - name: HOSTNAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  # In test clusters where hostnames are resolved in /etc/hosts on each node,
  # the HOSTNAME is not resolvable from inside containers
  # So inject the host IP as well
  - name: HOSTIP
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP
  - name: "HOST_PROC"
    value: "/hostfs/proc"
  - name: "HOST_SYS"
    value: "/hostfs/sys"
  - name: INFLUX_TOKEN
    valueFrom:
      secretKeyRef:
        name: influxdb-auth
        key: admin-token

## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## If the DaemonSet should run on the host's network namespace
## hostNetwork: true

## If using hostNetwork=true, set dnsPolicy to ClusterFirstWithHostNet
## ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#
## dnsPolicy: ClusterFirstWithHostNet

rbac:
  # Specifies whether RBAC resources should be created
  create: false

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name: telegraf

## Specify priorityClassName
## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
# priorityClassName: system-node-critical

override_config:
  toml: ~
  # Provide a literal TOML config
  # toml: |+
  #   [global_tags]
  #     foo = "bar"
  #   [agent]
  #     interval = "10s"
  #   [[inputs.mem]]
  #   [[outputs.influxdb_v2]]
  #     urls           = ["https://us-west-2-1.aws.cloud2.influxdata.com"]
  #     bucket         = "data"
  #     organization   = "OurCompany"
  #     token          = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

## Exposed telegraf configuration
## ref: https://docs.influxdata.com/telegraf/v1.13/administration/configuration/
config:
  # global_tags:
  #   cluster: "mycluster"
  agent:
    interval: "10s"
    round_interval: true
    metric_batch_size: 1000
    metric_buffer_limit: 10000
    collection_jitter: "0s"
    flush_interval: "10s"
    flush_jitter: "0s"
    precision: ""
    debug: false
    quiet: false
    logfile: ""
    hostname: "$HOSTNAME"
    omit_hostname: false
  inputs:
    - diskio: {}
    - kernel: {}
    - mem: {}
    - net: {}
    - processes: {}
    - swap: {}
    - system: {}
    - cpu:
        percpu: true
        totalcpu: true
        collect_cpu_time: false
        report_active: false
    - disk:
        ignore_fs:
          - tmpfs
          - devtmpfs
          - devfs
          - iso9660
          - overlay
          - aufs
          - squashfs
    - kubernetes:
        bearer_token: "/hostfs/var/lib/rancher/k3s/server/token"
        tls_cert: "/hostfs/var/lib/rancher/k3s/server/tls/client-admin.crt"
        tls_key: "/hostfs/var/lib/rancher/k3s/server/tls/client-admin.key"
    - kube_inventory:
        namespace: ""
  outputs:
    - influxdb_v2:
        urls:
          - "http://influxdb2.influxdb2.svc:8086"
        timeout: "5s"
        token: "${INFLUX_TOKEN}"
        bucket: "telegraf"
        organization: "influxdata"
        user_agent: "telegraf"
        insecure_skip_verify: false
  monitor_self: false
  docker_endpoint: ""
